# validate script syntax with http://lint.travis-ci.org/
# base of this file: http://datadesk.latimes.com/posts/2012/06/test-your-django-app-with-travisci/
branches:
  only:
    - master
    - feat/backups_testing
# Tell Travis you want a Python environment to test in
language: python
# List the versions of Python you'd like to test against
python:
  - "2.7.6"
sudo: required
services: 
  postgresql
addons:
  postgresql: "9.3"
# List the versions of Django you'd like to test against
env:
  - DJANGO_VERSION=1.8
  - DJANGO_VERSION=1.10.3
# Use https (public access) instead of git for git-submodules. This modifies only Travis-CI behavior!
git:
  submodules: false
# use sed to replace the SSH URL with the public URL, then init and update submodules
before_install:
  - sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
  - git submodule update --init --recursive
# Tell it the things it will need to install when it boots
install: 
  # Install the dependencies the app itself 
 - pip install -r requirements.txt 
  # Install whatever version of Django that's listed above
  # Travis is currently working on
 - pip install -q Django==$DJANGO_VERSION 

before_script:
  - psql -c "CREATE DATABASE ghostinspector;" -U postgres
  - psql -c "CREATE USER inspector WITH PASSWORD '1ghost2inspector';" -U postgres
  - psql -c "ALTER USER inspector CREATEDB;" -U postgres
  - psql -c "GRANT ALL PRIVILEGES ON DATABASE ghostinspector TO inspector;" -U postgres
  - cp $TRAVIS_BUILD_DIR/.travis/DTPMConnectionParams.json $TRAVIS_BUILD_DIR/PredictorDTPM/webService/
  - cp $TRAVIS_BUILD_DIR/.travis/secret_key.txt $TRAVIS_BUILD_DIR/server/keys/  
  - cp $TRAVIS_BUILD_DIR/.travis/google_key.json $TRAVIS_BUILD_DIR/server/keys/
  - cp $TRAVIS_BUILD_DIR/.travis/admins.json $TRAVIS_BUILD_DIR/server/keys/
  - cp $TRAVIS_BUILD_DIR/.travis/email_config.json $TRAVIS_BUILD_DIR/server/keys/
  - mkdir $TRAVIS_BUILD_DIR/server/logs
# Tell Travis how to run the test script itself
script: 
  - "python manage.py makemigrations"
  - "python manage.py migrate"
  - "coverage run --source='.' manage.py test"
  - "coverage report --omit=DataDictionary/*,server/* -m"

after_success:
  - coveralls
